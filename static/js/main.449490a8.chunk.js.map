{"version":3,"sources":["assets/pangrams.ts","hooks/useEventListener.ts","hooks/useChar.ts","funcs/index.tsx","hooks/useAnalytics.ts","hooks/useGame.ts","hooks/useTexts.ts","components/TextWriter.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["pangrams","useEventListener","eventName","handler","element","arguments","length","undefined","window","refHandler","useRef","refUnscribe","useEffect","current","document","addEventListener","cb","e","removeEventListener","console","error","unscribe","newChar","_ref","index","char","_ref$date","date","Date","now","sortStat","statictic","metrica","slice","_Object$entries$filte","Object","entries","filter","v","sort","a","b","apply","reduce","objectSpread","defineProperty","format","stat","_ref$measure","measure","_ref$classNameChar","classNameChar","_ref$classNameInfo","classNameInfo","comma","i","react_default","createElement","key","className","letter","c","meas","map","Math","round","repeat","missStat","reactStat","missChars","reactChars","practice","keys","concat","_a","len","toLowerCase","result","isUniques","Set","size","alphabetRegex","isAlphabetic","join","match","nextChar","random","includes","toUpperCase","trim","charAt","rndStringFromArray","useAnalyticsContext","createUseContext","_useState","useState","_useState2","slicedToArray","totalTime","setTotalTime","_useState3","_useState4","pressedKeyCnt","setPressedKeyCnt","_useState5","_useState6","speed","setSpeed","_useState7","_useState8","setStat","_useState9","_useState10","reactFormatted","setReactFormatted","_useState11","_useState12","missFormated","setMissFormated","_useState13","_useState14","averageSpeed","setAverageSpeed","_useState15","_useState16","react","setReact","_useState17","_useState18","miss","setMiss","onSuccess","cnt","ms","_stat$c$char","reactSummary","onError","resetAllStat","useGame","_useTexts","getRandIndex","texts","text","setText","nextTextType","setNextTextType","resetText","useTexts","_useChar","setChar","useChar","_useAnalyticsContext","keyPressHandler","useCallback","eventLetter","shiftKey","TextWriter","_useGame","typed","rest","App","ready","setReady","unscribeOnStartListener","Provider","node_modules_react","components_TextWriter","Boolean","location","hostname","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.449490a8.chunk.js","sourcesContent":["export default [\n  \"Brick quiz whangs jumpy veldt fox!\",\n  \"Quick wafting zephyrs vex bold Jim.\",\n  \"The five boxing wizards jump quickly.\",\n  \"Jackdaws love my sphinx of black quartz.\",\n  \"The five boxing wizards jumped quickly.\",\n  \"Five big quacking zephyrs jolt my wax bed.\",\n  \"Hick Jed wins quiz for extra blimp voyage.\",\n  \"Sympathizing would fix Quaker objectives.\",\n  \"Many-wived Jack laughs at probes of sex quiz.\",\n  \"Mix Zapf with Veljovic and get quirky Beziers.\",\n  \"Brawny gods just flocked up to quiz and vex him.\",\n  \"Jim just quit and packed extra bags for Liz Owen.\",\n  \"Turgid saxophones blew over Mick's jazzy quaff.\",\n  \"Dumpy kibitzer jingles as exchequer overflows.\",\n  \"Puzzled women bequeath jerks very exotic gifts.\",\n  \"Playing jazz vibe chords quickly excites my wife.\",\n  \"A boy, Max, felt quick during his hazy weaving jumps.\",\n  \"A large fawn jumped quickly over white zinc boxes.\",\n  \"Viewing quizzical abstracts mixed up hefty jocks.\",\n  \"Five wine experts jokingly quizzed sample Chablis.\",\n  \"William Jex quickly caught five dozen Republicans.\",\n  \"The vixen jumped quickly on her foe barking with zeal.\",\n  \"Harry, jogging quickly, axed zen monks with beef vapor.\",\n  \"Five or six big jet planes zoomed quickly by the tower.\",\n  \"Six big devils from Japan quickly forgot how to waltz.\",\n  \"Big July earthquakes confound zany experimental vow.\",\n  \"Exquisite farm wench gives body jolt to prize stinker.\",\n  \"My grandfather picks up quartz and valuable onyx jewels.\",\n  \"Six crazy kings vowed to abolish my quite pitiful jousts.\",\n  \"Jack amazed a few girls by dropping the antique onyx vase!\",\n  \"We have just quoted on nine dozen boxes of gray lamp wicks.\",\n  \"Jay visited back home and gazed upon a brown fox and quail.\",\n  \"May Jo equal the fine record by solving six puzzles a week?\",\n  \"Fred specialized in the job of making very quaint wax toys.\",\n  \"Freight to me sixty dozen quart jars and twelve black pans.\",\n  \"Jeb quickly drove a few extra miles on the glazed pavement.\",\n  \"Grumpy wizards make toxic brew for the evil Queen and Jack.\",\n  \"Verily the dark ex-Jew quit Zionism, preferring the cabala.\",\n  \"The job of waxing linoleum frequently peeves chintzy kids.\",\n  \"West quickly gave Bert handsome prizes for six juicy plums.\",\n  \"Just keep examining every low bid quoted for zinc etchings.\",\n  \"A quick movement of the enemy will jeopardize six gunboats.\",\n  \"All questions asked by five watch experts amazed the judge.\",\n  \"The exodus of jazzy pigeons is craved by squeamish walkers.\"\n];\n","import { useEffect, useRef } from \"react\";\n\nexport const useEventListener = (\n  eventName: string,\n  handler: any,\n  element: any = window\n) => {\n  const refHandler = useRef<any>();\n  const refUnscribe = useRef<any>();\n\n  useEffect(() => {\n    refHandler.current = handler;\n  }, [handler]);\n\n  useEffect(() => {\n    if (!document.addEventListener) {\n      console.error(\"browser don't support addEventListener\");\n      return;\n    }\n    const cb = (e: any) => refHandler.current(e);\n    document.addEventListener(eventName, cb, false);\n    refUnscribe.current = () => {\n      document.removeEventListener(eventName, cb, false);\n    };\n    return refUnscribe.current;\n  }, [element, eventName]);\n\n  return { unscribe: refUnscribe.current };\n};\n","import { useEffect, useState } from \"react\";\nimport { Char } from \"../types\";\n\nconst newChar = ({\n  index,\n  char,\n  date = Date.now()\n}: {\n  index: number;\n  char: string;\n  date?: number;\n}): Char => ({\n  index,\n  char,\n  date\n});\n\nexport const useChar = (text: string) => {\n  const [char, setChar] = useState<Char>(newChar({ index: 0, char: text[0] }));\n\n  useEffect(() => {\n    setChar(newChar({ index: 0, char: text[0] }));\n  }, [text]);\n\n  const nextChar = () => {\n    const index = char.index + 1;\n    setChar(newChar({ char: text[index], index }));\n  };\n\n  return { char, nextChar };\n};\n","import React from \"react\";\nimport { Stat, sortedMetrica } from \"../types/index\";\nimport { SpeedStat, MissStat } from \"../types\";\n\nexport const sortStat = (\n  statictic: Stat,\n  metrica: sortedMetrica,\n  slice?: number\n) => {\n  const CHAR = 0;\n  const PARAMS = 1;\n  return Object.entries(statictic)\n    .filter(v => v[PARAMS][metrica] > 0)\n    .sort((a, b) => b[PARAMS][metrica] - a[PARAMS][metrica])\n    .slice(...[0, slice])\n    .reduce((a, v) => {\n      return { ...a, [v[CHAR]]: v[PARAMS][metrica] };\n    }, {});\n};\n\nexport const format = ({\n  stat,\n  measure = \"\",\n  classNameChar = \"\",\n  classNameInfo = \"\"\n}: {\n  stat: SpeedStat | MissStat;\n  measure?: string;\n  classNameChar?: string;\n  classNameInfo?: string;\n}) => {\n  if (!stat) {\n    return false;\n  }\n  const CHAR = 0;\n  const COUNT = 1;\n  const comma = (i: number) => (\n    <span key={i} className={classNameInfo}>\n      {i > 0 ? \", \" : \"\"}\n    </span>\n  );\n  const letter = (c: string) => {\n    const char = c === \" \" ? \"[space] \" : c;\n    return (\n      <span key={char} className={classNameChar}>\n        {char}{\" \"}\n      </span>\n    );\n  };\n  const meas = (\n    <span key={measure} className={classNameInfo}>\n      {\" \"}\n      {measure}{\" \"}\n    </span>\n  );\n  return Object.entries(stat)\n    .filter(stat => stat[COUNT] > 0)\n    .map((stat, i) => [\n      comma(i),\n      letter(stat[CHAR]),\n      Math.round(stat[COUNT]),\n      meas\n    ]);\n};\n\nexport const rndStringFromArray = (_a: string[], len: number = 24) => {\n  const a = _a.map(c => c.toLowerCase());\n  let result = \"\";\n  const isUniques = new Set(a).size > 1;\n  const alphabetRegex = /[a-zA-Zа-яА-ЯЁё]/g;\n  const isAlphabetic = a.join(\"\").match(alphabetRegex);\n  for (let i = 0; i < len; i++) {\n    if (i > 0 && isUniques && isAlphabetic) {\n      let nextChar;\n      do {\n        nextChar = a[Math.round(Math.random() * (a.length - 1))];\n      } while (\n        nextChar === result[result.length - 1] ||\n        ([\".\", \",\", \"!\", \"?\"].includes(nextChar) &&\n          [\".\", \",\", \" \", \"?\", \"!\"].includes(result[result.length - 1]))\n      );\n      result += [\".\", \"?\", \"!\", \",\"].includes(nextChar)\n        ? `${nextChar} `\n        : nextChar;\n      if ([\".\", \"?\", \"!\"].includes(result[result.length - 3])) {\n        result =\n          result.slice(0, result.length - 1) +\n          result[result.length - 1].toUpperCase();\n      }\n    } else {\n      if (isAlphabetic) {\n        let nextChar;\n        do {\n          nextChar = a[Math.round(Math.random() * (a.length - 1))];\n        } while ([\".\", \"?\", \"!\"].includes(nextChar));\n        result += nextChar;\n      } else {\n        result += a[Math.round(Math.random() * (a.length - 1))];\n      }\n    }\n    if (i + 1 < len && Math.random() > 0.68) {\n      result += \" \";\n    }\n  }\n  result = result.trim();\n  return `${result.charAt(0).toUpperCase()}${result.slice(1)}${\n    result[result.length - 1].match(alphabetRegex)\n      ? [\".\", \"?\", \"!\"][Math.round(Math.random() * 2)]\n      : \"\"\n  }`;\n};\n\nexport const repeat = (missStat: {}, reactStat: {}) => {\n  let missChars = [];\n  let reactChars = [];\n  let practice: string[] = [];\n  if (missStat) {\n    missChars = Object.keys(missStat);\n    practice = practice.concat(missChars);\n  }\n  if (reactStat) {\n    reactChars = Object.keys(reactStat).slice(0, 3);\n    practice = practice.concat(reactChars);\n  }\n  return rndStringFromArray(practice);\n};\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport createUseContext from \"constate\";\nimport { Char } from \"../types\";\nimport { Stat } from \"../types/index\";\nimport { sortStat, format } from \"../funcs\";\n\nconst useAnalytics = () => {\n  const [totalTime, setTotalTime] = useState(0);\n  const [pressedKeyCnt, setPressedKeyCnt] = useState(0);\n  const [speed, setSpeed] = useState(0);\n  const [stat, setStat] = useState<Stat>();\n  const [reactFormatted, setReactFormatted] = useState<React.ReactNode>([]);\n  const [missFormated, setMissFormated] = useState<React.ReactNode>([]);\n  const [averageSpeed, setAverageSpeed] = useState(\"\");\n  const [react, setReact] = useState({});\n  const [miss, setMiss] = useState({});\n\n  const resetAllStat = () => {\n    setTotalTime(0);\n    setPressedKeyCnt(0);\n    setSpeed(0);\n    setStat(undefined);\n    setReactFormatted([]);\n    setMissFormated([]);\n    setAverageSpeed(\"\");\n    setReact({});\n    setMiss({});\n  };\n\n  const onSuccess = (c: Char) => {\n    if (c.index === 0) {\n      // the first character is always the slowest; therefore, I excluded it from statistics\n      return;\n    }\n\n    setPressedKeyCnt(cnt => cnt + 1);\n    setTotalTime(ms => ms + Date.now() - c.date);\n\n    setStat(stat => {\n      if (stat && stat[c.char]) {\n        let { reactSummary, cnt, miss } = stat[c.char];\n        reactSummary += Date.now() - c.date;\n        cnt += 1;\n        const react = reactSummary / cnt;\n        return { ...stat, [c.char]: { reactSummary, cnt, miss, react } };\n      }\n      const react = Date.now() - c.date;\n      return {\n        ...(stat || {}),\n        [c.char]: { reactSummary: react, cnt: 1, miss: 0, react: react }\n      };\n    });\n  };\n\n  useEffect(() => {\n    if (totalTime && pressedKeyCnt) {\n      setSpeed((60000 * pressedKeyCnt) / totalTime);\n    }\n  }, [totalTime, pressedKeyCnt]);\n\n  const onError = (c: Char) => {\n    setStat(stat => {\n      if (stat && stat[c.char]) {\n        let { miss } = stat[c.char];\n        miss += 1;\n        return { ...stat, [c.char]: { ...stat[c.char], miss } };\n      }\n      return {\n        ...(stat || {}),\n        [c.char]: { reactSummary: 0, cnt: 0, miss: 1, react: 0 }\n      };\n    });\n  };\n\n  useEffect(() => {\n    if (stat) {\n      const reactStat = sortStat(stat, \"react\", 3);\n      const missStat = sortStat(stat, \"miss\");\n      const averageSpeed = `${Math.round(speed)} chars (~${Math.round(\n        speed / 5\n      )} words) per minute`;\n      const reactFormatted = format({\n        stat: reactStat,\n        measure: \"ms\",\n        classNameChar: \"big-font\"\n      });\n      const missFormated = format({\n        stat: missStat,\n        classNameChar: \"big-font\"\n      });\n      setReactFormatted(reactFormatted);\n      setMissFormated(missFormated);\n      setAverageSpeed(averageSpeed);\n      setReact(reactStat);\n      setMiss(missStat);\n    }\n  }, [stat, speed]);\n\n  return {\n    speed,\n    stat,\n    onSuccess,\n    onError,\n    setSpeed,\n    averageSpeed,\n    missFormated,\n    reactFormatted,\n    react,\n    miss,\n    resetAllStat\n  };\n};\n\nexport const useAnalyticsContext = createUseContext(useAnalytics);\n","import { useCallback } from \"react\";\nimport { useTexts } from \"./useTexts\";\nimport { useEventListener } from \"./useEventListener\";\nimport { useChar } from \"./useChar\";\nimport { useAnalyticsContext } from \"./useAnalytics\";\nimport { repeat } from \"../funcs\";\n\nexport const useGame = () => {\n  const { text, resetText, nextTextType } = useTexts();\n  const { char, nextChar } = useChar(text);\n  const {\n    onSuccess,\n    onError,\n    miss,\n    react,\n    resetAllStat\n  } = useAnalyticsContext();\n\n  const keyPressHandler = useCallback(\n    (e: KeyboardEvent) => {\n      const eventLetter = e.shiftKey ? e.key.toUpperCase() : e.key;\n      if (char.char !== eventLetter) {\n        // wrong, try again;\n        onError(char);\n        return;\n      }\n      onSuccess(char);\n      if (char.index === text.length - 1) {\n        // win, try new text\n        if (nextTextType === \"random\") {\n          resetAllStat();\n          resetText();\n          return;\n        }\n        resetText(repeat(miss, react));\n        return;\n      }\n      // good,next char\n      nextChar();\n    },\n    [\n      char,\n      nextChar,\n      resetText,\n      text,\n      onSuccess,\n      onError,\n      nextTextType,\n      miss,\n      react,\n      resetAllStat\n    ]\n  );\n\n  useEventListener(\"keypress\", keyPressHandler);\n\n  return { text, index: char.index };\n};\n","import { useState } from \"react\";\nimport texts from \"../assets/pangrams\";\n\nexport const useTexts = () => {\n  const getRandIndex = () => Math.round(Math.random() * (texts.length - 1));\n  const [text, setText] = useState<string>(texts[getRandIndex()]);\n  const [nextTextType, setNextTextType] = useState<\"random\" | \"practice\">(\n    \"practice\"\n  );\n  const resetText = (practice?: string) => {\n    if (practice) {\n      setNextTextType(\"random\");\n      setText(practice);\n      return;\n    }\n    setNextTextType(\"practice\");\n    setText(texts[getRandIndex()]);\n  };\n  return { text, resetText, nextTextType };\n};\n","import React from \"react\";\nimport { useGame } from \"../hooks/useGame\";\n\nconst TextWriter: React.SFC = () => {\n  const { text, index } = useGame();\n  let typed = text.slice(0, index);\n  let rest = text.slice(index);\n\n  return (\n    <div>\n      {typed}\n      <span className=\"current-char-arrow\">^</span>\n      {rest}\n    </div>\n  );\n};\n\nexport default TextWriter;\n","import React, { Fragment, FunctionComponent, useState, useEffect } from \"react\";\nimport TextWriter from \"./components/TextWriter\";\nimport { useEventListener } from \"./hooks/useEventListener\";\nimport { useAnalyticsContext } from \"./hooks/useAnalytics\";\nimport \"./App.css\";\n\nconst App: FunctionComponent = () => {\n  const [ready, setReady] = useState(false);\n\n  const { unscribe: unscribeOnStartListener } = useEventListener(\n    \"keypress\",\n    () => setReady(true)\n  );\n\n  useEffect(() => {\n    unscribeOnStartListener && unscribeOnStartListener();\n  }, [ready, unscribeOnStartListener]);\n\n  const Game = () => {\n    const {\n      averageSpeed,\n      missFormated,\n      reactFormatted\n    } = useAnalyticsContext();\n    return (\n      <Fragment>\n        <TextWriter />\n        <div className=\"info\">\n          <div className=\"info_paragraph\">speed: {averageSpeed}</div>\n          <div className=\"info_paragraph\">the slowest: {reactFormatted}</div>\n          <div className=\"info_paragraph\">with typos: {missFormated}</div>\n        </div>\n      </Fragment>\n    );\n  };\n\n  return (\n    <useAnalyticsContext.Provider>\n      <div className=\"App\">{ready ? <Game /> : \"press any key to start\"}</div>\n    </useAnalyticsContext.Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}